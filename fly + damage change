local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Definir variáveis de voo
local flying = false
local speed = 50
local bodyVelocity

-- Função de voo
local function startFlying()
    if flying then return end
    flying = true

    -- Criar BodyVelocity para controle de voo
    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(400000, 400000, 400000)
    bodyVelocity.Velocity = Vector3.new(0, 50, 0)
    bodyVelocity.Parent = character:WaitForChild("HumanoidRootPart")

    -- Adicionar um corpo de aceleração para o voo
    while flying do
        bodyVelocity.Velocity = Vector3.new(0, speed, 0)
        wait(0.1)
    end
end

-- Função de parar o voo
local function stopFlying()
    if not flying then return end
    flying = false

    if bodyVelocity then
        bodyVelocity:Destroy()
    end
end

-- Configuração para controle
local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end

    if input.KeyCode == Enum.KeyCode.Space then
        if flying then
            stopFlying()
        else
            startFlying()
        end
    end
end)



local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local tool = character:WaitForChild("Tool") -- Troque "Tool" pelo nome da sua ferramenta
local originalDamage = 10 -- Dano original
local increasedDamage = 100 -- Novo dano

-- Função para alterar dano
local function changeDamage()
    -- Aumentar dano
    if tool then
        tool.Damage = increasedDamage
    end
end

-- Quando a ferramenta é equipada
tool.Equipped:Connect(function()
    changeDamage()
end)
